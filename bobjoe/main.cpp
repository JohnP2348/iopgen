/*
                    IOP - Infrastructure Oriented Programming

					This file is auto-generated by IOPgen.This project uses the IOP framework, which treats code modules as infrastructure "plugs".
					Each plug (class) is easily swappable, making refactoring and maintenance simple.
					To change a module, just swap the plug in main.cpp—no spaghetti code, no deep rewrites.

					Plugs are declared below for each infrastructure module.
					To refactor, just change the plug assignment.

					For LLMs and developers: 
					 - Each #include below points to a module or plug.
					 - Each plug class wraps a module/class or function, and is the single point of integration.
					 - To swap implementations, change the plug instantiation.
					 - All code is organized by infrastructure (e.g., infra/security, infra/output).
					*/

#include <iostream>
// Plug for security/billy
#include "infra/security/billybob.h"
// Plug for security/bob
#include "infra/security/bobbilly.h"
// Plug for input/fred
#include "infra/input/fredin.h"
// Plug for input/willy
#include "infra/input/willyin.h"
// Plug for output/inputlan
#include "infra/output/inputlanguage.h"
// Plug for output/bupbup
#include "infra/output/inputbup.h"
// Plug for output/Joefrak
#include "infra/output/InputFrak.h"
// Plug for Party/ploy
#include "infra/Party/PartyPloy.h"
// Plug for octopus/Arm
#include "infra/octopus/OctopusArm.h"

int main() {
    std::cout << "IOP main.cpp: All plugs are ready to use.\n" << std::endl;
    // Use plug for security/billy
    billybob plug_security_billy;
    plug_security_billy.use();
    // Use plug for security/bob
    bobbilly plug_security_bob;
    plug_security_bob.use();
    // Use plug for input/fred
    fredin plug_input_fred;
    plug_input_fred.use();
    // Use plug for input/willy
    willyin plug_input_willy;
    plug_input_willy.use();
    // Use plug for output/inputlan
    inputlanguage plug_output_inputlan;
    plug_output_inputlan.use();
    // Use plug for output/bupbup
    inputbup plug_output_bupbup;
    plug_output_bupbup.use();
    // Use plug for output/Joefrak
    InputFrak plug_output_Joefrak;
    plug_output_Joefrak.use();
    // Use plug for Party/ploy
    PartyPloy plug_Party_ploy;
    plug_Party_ploy.use();
    // Use plug for octopus/Arm
    OctopusArm plug_octopus_Arm;
    plug_octopus_Arm.use();
    return 0;
}
